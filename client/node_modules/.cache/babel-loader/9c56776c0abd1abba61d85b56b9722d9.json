{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\thane\\\\Desktop\\\\React_Redux\\\\thane-engen.com\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport books from \"../apis/books\";\nimport history from \"../../../../history\";\nimport { GET_BOOK, GET_BOOKS, CREATE_BOOK, EDIT_BOOK, DELETE_BOOK } from \"./types\"; // ACTIONS HANDLE API REQUESTS (RESTful CONVENTIONS)\n\nexport const getBooks = () => async dispatch => {\n  const response = await books.get(\"/books\");\n  dispatch({\n    type: GET_BOOKS,\n    payload: response.data\n  });\n};\nexport const getBook = id => async dispatch => {\n  const response = await books.get(`/books/${id}`);\n  dispatch({\n    type: GET_BOOK,\n    payload: response.data\n  });\n};\nexport const createBook = formValues => async dispatch => {\n  const response = await books.post(\"/books\", _objectSpread({}, formValues));\n  dispatch({\n    type: CREATE_BOOK,\n    payload: response.data\n  });\n  history.push(`/book-blog/books/${response.data.id}`);\n};\nexport const editBook = (id, formValues) => async dispatch => {\n  const response = await books.patch(`/books/${id}`, formValues);\n  dispatch({\n    type: EDIT_BOOK,\n    payload: response.data\n  });\n  history.goBack();\n};\nexport const deleteBook = id => async dispatch => {\n  await books.delete(`/books/${id}`);\n  dispatch({\n    type: DELETE_BOOK,\n    payload: id\n  });\n  history.push(\"/book-blog/books\");\n};","map":{"version":3,"sources":["C:/Users/thane/Desktop/React_Redux/thane-engen.com/client/src/components/projects/books-blog/actions/index.js"],"names":["books","history","GET_BOOK","GET_BOOKS","CREATE_BOOK","EDIT_BOOK","DELETE_BOOK","getBooks","dispatch","response","get","type","payload","data","getBook","id","createBook","formValues","post","push","editBook","patch","goBack","deleteBook","delete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,eAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SACEC,QADF,EAEEC,SAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,WALF,QAMO,SANP,C,CASA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,QAAV,CAAvB;AAEAF,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAER,SAAR;AAAmBS,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAArC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMC,OAAO,GAAGC,EAAE,IAAI,MAAMP,QAAN,IAAkB;AAC7C,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,UAASK,EAAG,EAAvB,CAAvB;AAEAP,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAET,QAAR;AAAkBU,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAApC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMG,UAAU,GAAGC,UAAU,IAAI,MAAMT,QAAN,IAAkB;AACxD,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACkB,IAAN,CAAW,QAAX,oBAA0BD,UAA1B,EAAvB;AAEAT,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEP,WAAR;AAAqBQ,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAvC,GAAD,CAAR;AACAZ,EAAAA,OAAO,CAACkB,IAAR,CAAc,oBAAmBV,QAAQ,CAACI,IAAT,CAAcE,EAAG,EAAlD;AACD,CALM;AAOP,OAAO,MAAMK,QAAQ,GAAG,CAACL,EAAD,EAAKE,UAAL,KAAoB,MAAMT,QAAN,IAAkB;AAC5D,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACqB,KAAN,CAAa,UAASN,EAAG,EAAzB,EAA4BE,UAA5B,CAAvB;AAEAT,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEN,SAAR;AAAmBO,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAArC,GAAD,CAAR;AACAZ,EAAAA,OAAO,CAACqB,MAAR;AACD,CALM;AAOP,OAAO,MAAMC,UAAU,GAAGR,EAAE,IAAI,MAAMP,QAAN,IAAkB;AAChD,QAAMR,KAAK,CAACwB,MAAN,CAAc,UAAST,EAAG,EAA1B,CAAN;AAEAP,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEL,WAAR;AAAqBM,IAAAA,OAAO,EAAEG;AAA9B,GAAD,CAAR;AACAd,EAAAA,OAAO,CAACkB,IAAR,CAAa,kBAAb;AACD,CALM","sourcesContent":["import books from \"../apis/books\";\r\nimport history from \"../../../../history\";\r\nimport {\r\n  GET_BOOK,\r\n  GET_BOOKS,\r\n  CREATE_BOOK,\r\n  EDIT_BOOK,\r\n  DELETE_BOOK\r\n} from \"./types\";\r\n\r\n\r\n// ACTIONS HANDLE API REQUESTS (RESTful CONVENTIONS)\r\n\r\nexport const getBooks = () => async dispatch => {\r\n  const response = await books.get(\"/books\");\r\n\r\n  dispatch({ type: GET_BOOKS, payload: response.data });\r\n};\r\n\r\nexport const getBook = id => async dispatch => {\r\n  const response = await books.get(`/books/${id}`);\r\n\r\n  dispatch({ type: GET_BOOK, payload: response.data });\r\n};\r\n\r\nexport const createBook = formValues => async dispatch => {\r\n  const response = await books.post(\"/books\", { ...formValues });\r\n\r\n  dispatch({ type: CREATE_BOOK, payload: response.data });\r\n  history.push(`/book-blog/books/${response.data.id}`);\r\n};\r\n\r\nexport const editBook = (id, formValues) => async dispatch => {\r\n  const response = await books.patch(`/books/${id}`, formValues);\r\n\r\n  dispatch({ type: EDIT_BOOK, payload: response.data });\r\n  history.goBack();\r\n};\r\n\r\nexport const deleteBook = id => async dispatch => {\r\n  await books.delete(`/books/${id}`);\r\n\r\n  dispatch({ type: DELETE_BOOK, payload: id });\r\n  history.push(\"/book-blog/books\");\r\n};\r\n"]},"metadata":{},"sourceType":"module"}