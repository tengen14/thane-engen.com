{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\thane\\\\Desktop\\\\React_Redux\\\\thane-engen.com\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\thane\\\\Desktop\\\\React_Redux\\\\thane-engen.com\\\\client\\\\src\\\\components\\\\Contact.js\";\nimport _ from \"lodash\";\nimport React from \"react\";\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      subject: \"\",\n      email: \"\",\n      feedback: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Contact\"), React.createElement(\"form\", {\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Your Name\",\n      required: true,\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"subject\",\n      type: \"text\",\n      placeholder: \"Subject\",\n      required: true,\n      value: this.state.subject,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      required: true,\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control\",\n      name: \"feedback\",\n      onChange: this.handleChange,\n      placeholder: \"Message...\",\n      required: true,\n      value: this.state.feedback,\n      style: {\n        width: \"100%\",\n        height: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-lg\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://github.com/tengen14\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fab fa-github-square\",\n      title: \"View My Github Profile!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"a\", {\n      href: \"https://www.linkedin.com/in/thane-engen-b573bb149\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fab fa-linkedin\",\n      title: \"View My Linkedin Profile!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))))));\n  }\n\n  handleChange(event, state) {\n    const value = event.target.value;\n    this.setState(_objectSpread({}, state, {\n      [event.target.feedback]: value,\n      [event.target.name]: value,\n      [event.target.subject]: value,\n      [event.target.email]: value\n    }));\n  }\n\n  handleSubmit(event) {\n    const templateId = \"template_fo7tCjdD\";\n    this.sendFeedback(templateId, {\n      from_name: this.state.name,\n      _subject: this.state.subject,\n      _email: this.state.email,\n      message_html: this.state.feedback\n    });\n  }\n\n  sendFeedback(templateId, variables) {\n    const emailValidation = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    for (let field in this.state) {\n      if (this.state[field] === \"\") {\n        return console.error(\"Submission is Missing\");\n      }\n    }\n\n    if (this.state.email.match(emailValidation)) {\n      console.log(\"Email is Valid\");\n    } else {\n      return console.error(\"Email is Invalid\");\n    }\n\n    window.emailjs.send(\"gmail\", templateId, variables).then(response => {\n      console.log(\"Email successfully sent!\", response.status, response.text);\n      alert(\"Email successfully sent!\");\n    });\n    this.setState({\n      name: \"\",\n      subject: \"\",\n      email: \"\",\n      feedback: \"\"\n    });\n  }\n\n} // values only cleared when all values are filled and sent","map":{"version":3,"sources":["C:/Users/thane/Desktop/React_Redux/thane-engen.com/client/src/components/Contact.js"],"names":["_","React","Contact","Component","constructor","props","state","name","subject","email","feedback","handleChange","bind","handleSubmit","render","width","height","event","value","target","setState","templateId","sendFeedback","from_name","_subject","_email","message_html","variables","emailValidation","field","console","error","match","log","window","emailjs","send","then","response","status","text","alert"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\r\nimport React from \"react\";\r\n\r\nexport default class Contact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { name: \"\", subject: \"\", email: \"\", feedback: \"\" };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"contact\">\r\n        <div className=\"container\">\r\n          <h2>Contact</h2>\r\n          <form autoComplete=\"off\">\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Your Name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"subject\"\r\n                type=\"text\"\r\n                placeholder=\"Subject\"\r\n                required\r\n                value={this.state.subject}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                required\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"feedback\"\r\n                onChange={this.handleChange}\r\n                placeholder=\"Message...\"\r\n                required\r\n                value={this.state.feedback}\r\n                style={{ width: \"100%\", height: \"150px\" }}\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-lg\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n            <div>\r\n              <a href=\"https://github.com/tengen14\" target=\"_blank\">\r\n                <i className=\"fab fa-github-square\" title=\"View My Github Profile!\"/>\r\n              </a>\r\n              <a href=\"https://www.linkedin.com/in/thane-engen-b573bb149\" target=\"_blank\">\r\n                <i className=\"fab fa-linkedin\" title=\"View My Linkedin Profile!\"/>\r\n              </a>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleChange(event, state) {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      ...state,\r\n      [event.target.feedback]: value,\r\n      [event.target.name]: value,\r\n      [event.target.subject]: value,\r\n      [event.target.email]: value\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const templateId = \"template_fo7tCjdD\";\r\n\r\n    this.sendFeedback(templateId, {\r\n      from_name: this.state.name,\r\n      _subject: this.state.subject,\r\n      _email: this.state.email,\r\n      message_html: this.state.feedback\r\n    });\r\n  }\r\n\r\n  sendFeedback(templateId, variables) {\r\n    const emailValidation = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n    for (let field in this.state) {\r\n      if (this.state[field] === \"\") {\r\n        return console.error(\"Submission is Missing\");\r\n      }\r\n    }\r\n\r\n    if (this.state.email.match(emailValidation)) {\r\n      console.log(\"Email is Valid\");\r\n    } else {\r\n      return console.error(\"Email is Invalid\");\r\n    }\r\n\r\n    window.emailjs.send(\"gmail\", templateId, variables).then(response => {\r\n      console.log(\"Email successfully sent!\", response.status, response.text);\r\n      alert(\"Email successfully sent!\");\r\n    });\r\n    this.setState({ name: \"\", subject: \"\", email: \"\", feedback: \"\" });\r\n  }\r\n}\r\n\r\n// values only cleared when all values are filled and sent\r\n"]},"metadata":{},"sourceType":"module"}