{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thane\\\\Desktop\\\\React_Redux\\\\thane-engen.com\\\\client\\\\src\\\\components\\\\projects\\\\books-blog\\\\components\\\\BookForm.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass BookForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderField = ({\n      input,\n      label,\n      type,\n      meta: {\n        touched,\n        error\n      }\n    }) => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        type: type,\n        placeholder: label,\n        className: \"form-control form-control-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      })), touched && error && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, error));\n    };\n\n    this.renderTextArea = ({\n      input,\n      label,\n      type,\n      meta: {\n        touched,\n        error\n      }\n    }) => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, label), React.createElement(\"textarea\", Object.assign({\n        id: \"description-input\",\n        className: \"form-control\"\n      }, input, {\n        type: type,\n        placeholder: label,\n        rows: \"10\",\n        cols: \"40\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })), touched && error && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, error));\n    };\n\n    this.onSubmit = formValues => {\n      this.props.onSubmit(formValues);\n    };\n  }\n\n  buttonType() {\n    if (this.props.type === \"add\") {\n      return React.createElement(\"button\", {\n        className: \"btn btn-primary btn-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Submit\");\n    }\n\n    if (this.props.type === \"edit\") {\n      React.createElement(\"button\", {\n        className: \"btn btn-warning btn-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Update\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"title\",\n      component: this.renderField,\n      type: \"text\",\n      label: \"Title:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"author\",\n      component: this.renderField,\n      type: \"text\",\n      label: \"Author:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"image\",\n      component: this.renderField,\n      type: \"text\",\n      label: \"Image URL:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"desc\",\n      component: this.renderTextArea,\n      type: \"text\",\n      label: \"Description:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default reduxForm({\n  form: \"bookForm\"\n})(BookForm);","map":{"version":3,"sources":["C:/Users/thane/Desktop/React_Redux/thane-engen.com/client/src/components/projects/books-blog/components/BookForm.js"],"names":["React","Field","reduxForm","BookForm","Component","renderField","input","label","type","meta","touched","error","renderTextArea","onSubmit","formValues","props","buttonType","render","handleSubmit","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nclass BookForm extends React.Component {\r\n  renderField = ({ input, label, type, meta: { touched, error } }) => {\r\n    return (\r\n      <React.Fragment>\r\n        <label>{label}</label>\r\n        <input\r\n          {...input}\r\n          type={type}\r\n          placeholder={label}\r\n          className=\"form-control form-control-lg\"\r\n        />\r\n        {touched && error && <span>{error}</span>}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  renderTextArea = ({ input, label, type, meta: { touched, error } }) => {\r\n    return (\r\n      <React.Fragment>\r\n        <label>{label}</label>\r\n        <textarea\r\n          id=\"description-input\"\r\n          className=\"form-control\"\r\n          {...input}\r\n          type={type}\r\n          placeholder={label}\r\n          rows=\"10\"\r\n          cols=\"40\"\r\n        />\r\n        {touched && error && <span>{error}</span>}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  onSubmit = formValues => {\r\n    this.props.onSubmit(formValues);\r\n  };\r\n\r\n  buttonType()  {\r\n    if (this.props.type === \"add\") {\r\n      return <button className=\"btn btn-primary btn-lg\">Submit</button>;\r\n    }\r\n    if (this.props.type === \"edit\") {\r\n      <button className=\"btn btn-warning btn-lg\">Update</button>;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container pt-5\">\r\n        <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n          <div className=\"form-group\">\r\n            <Field\r\n              name=\"title\"\r\n              component={this.renderField}\r\n              type=\"text\"\r\n              label=\"Title:\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Field\r\n              name=\"author\"\r\n              component={this.renderField}\r\n              type=\"text\"\r\n              label=\"Author:\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Field\r\n              name=\"image\"\r\n              component={this.renderField}\r\n              type=\"text\"\r\n              label=\"Image URL:\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Field\r\n              name=\"desc\"\r\n              component={this.renderTextArea}\r\n              type=\"text\"\r\n              label=\"Description:\"\r\n            />\r\n          </div>\r\n          {/* {this.buttonType()} */}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default reduxForm({\r\n  form: \"bookForm\"\r\n})(BookForm);\r\n"]},"metadata":{},"sourceType":"module"}