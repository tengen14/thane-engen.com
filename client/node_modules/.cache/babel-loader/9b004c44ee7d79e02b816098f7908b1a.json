{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thane\\\\Desktop\\\\React_Redux\\\\thane-engen.com\\\\src\\\\components\\\\projects\\\\recipe-box\\\\components\\\\recipes\\\\RecipeIndex.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport RecipeList from \"./RecipeIndex/RecipeList\";\nimport RecipeShow from \"./RecipeIndex/RecipeShow\";\nimport { getRecipes } from \"../../actions\";\nimport \"../../../../../index\";\nimport \"../../../../../styles/recipe-box/recipe-box.scss\";\n\nclass RecipeIndex extends React.Component {\n  componentDidMount() {\n    this.props.getRecipes();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"Recipe-Box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Recipe Box \", React.createElement(\"i\", {\n      className: \"fas fa-hamburger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })), React.createElement(RecipeList, {\n      recipes: this.props.recipes,\n      selectedRecipe: this.props.selectedRecipe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(RecipeShow, {\n      selectedRecipe: this.props.selectedRecipe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  }\n\n} // Props defined from Reducer State Object and passed to component\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    recipes: Object.values(state.recipes),\n    selectedRecipe: state.recipes[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getRecipes\n})(RecipeIndex);","map":{"version":3,"sources":["C:/Users/thane/Desktop/React_Redux/thane-engen.com/src/components/projects/recipe-box/components/recipes/RecipeIndex.js"],"names":["React","connect","RecipeList","RecipeShow","getRecipes","RecipeIndex","Component","componentDidMount","props","render","recipes","selectedRecipe","mapStateToProps","state","ownProps","Object","values","match","params","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAO,sBAAP;AACA,OAAO,kDAAP;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACxCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,UAAX;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACa;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb,CADF,EAIE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OADtB;AAEE,MAAA,cAAc,EAAE,KAAKF,KAAL,CAAWG,cAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAQE,oBAAC,UAAD;AAAY,MAAA,cAAc,EAAE,KAAKH,KAAL,CAAWG,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAYD;;AAlBuC,C,CAqB1C;;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLJ,IAAAA,OAAO,EAAEK,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACH,OAApB,CADJ;AAELC,IAAAA,cAAc,EAAEE,KAAK,CAACH,OAAN,CAAcI,QAAQ,CAACG,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAFX,GAAP;AAID,CALD;;AAOA,eAAelB,OAAO,CAACW,eAAD,EAAkB;AAAER,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,WAAzC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport RecipeList from \"./RecipeIndex/RecipeList\";\nimport RecipeShow from \"./RecipeIndex/RecipeShow\";\nimport { getRecipes } from \"../../actions\";\nimport \"../../../../../index\";\nimport \"../../../../../styles/recipe-box/recipe-box.scss\";\n\nclass RecipeIndex extends React.Component {\n  componentDidMount() {\n    this.props.getRecipes();\n  }\n\n  render() {\n    return (\n      <div id=\"Recipe-Box\">\n        <h1>\n          Recipe Box <i className=\"fas fa-hamburger\"></i>\n        </h1>\n        <RecipeList\n          recipes={this.props.recipes}\n          selectedRecipe={this.props.selectedRecipe}\n        />\n        <RecipeShow selectedRecipe={this.props.selectedRecipe} />\n      </div>\n    );\n  }\n}\n\n// Props defined from Reducer State Object and passed to component\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    recipes: Object.values(state.recipes),\n    selectedRecipe: state.recipes[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, { getRecipes })(RecipeIndex);\n"]},"metadata":{},"sourceType":"module"}