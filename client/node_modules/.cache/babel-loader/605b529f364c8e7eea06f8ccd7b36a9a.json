{"ast":null,"code":"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRecipe, deleteRecipe } from \"../../actions\";\nimport history from \"../../history\";\n\nclass RecipeDelete extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.confirmDelete = () => {\n      // Prompt user if they would like to delete 'selected recipe'\n      let choice = window.confirm(\"Are you sure you wish to delete \\\"\".concat(this.props.selectedRecipe.title, \"\\\" from the Recipe Box?\")); // Execute 'delete' action if true or 'go back' if false\n\n      if (choice === true) {\n        this.props.deleteRecipe(this.props.match.params.id);\n      } else {\n        history.goBack();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getRecipe(this.props.match.params.id);\n    this.confirmDelete();\n  }\n\n  // Nothing new is rendered\n  render() {\n    return null;\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    selectedRecipe: state.recipes[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getRecipe,\n  deleteRecipe\n})(RecipeDelete);","map":{"version":3,"sources":["C:/Users/thane/Desktop/React_Redux/thane-engen.com/src/components/projects/recipe-box/client/src/components/recipes/RecipeDelete.js"],"names":["React","connect","getRecipe","deleteRecipe","history","RecipeDelete","Component","confirmDelete","choice","window","confirm","props","selectedRecipe","title","match","params","id","goBack","componentDidMount","render","mapStateToProps","state","ownProps","recipes"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,eAAxC;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAMzCC,aANyC,GAMzB,MAAM;AACpB;AACA,UAAIC,MAAM,GAAGC,MAAM,CAACC,OAAP,6CACyB,KAAKC,KAAL,CAAWC,cAAX,CAA0BC,KADnD,6BAAb,CAFoB,CAKpB;;AACA,UAAIL,MAAM,KAAK,IAAf,EAAqB;AACnB,aAAKG,KAAL,CAAWR,YAAX,CAAwB,KAAKQ,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD;AACD,OAFD,MAEO;AACLZ,QAAAA,OAAO,CAACa,MAAR;AACD;AACF,KAjBwC;AAAA;;AACzCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,KAAL,CAAWT,SAAX,CAAqB,KAAKS,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C;AACA,SAAKT,aAAL;AACD;;AAeD;AACAY,EAAAA,MAAM,GAAG;AACP,WAAO,IAAP;AACD;;AAtBwC;;AAyB3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEV,IAAAA,cAAc,EAAES,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAlB,GAAP;AACD,CAFD;;AAIA,eAAef,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAlB,CAAP,CACbE,YADa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getRecipe, deleteRecipe } from \"../../actions\";\r\nimport history from \"../../history\";\r\n\r\nclass RecipeDelete extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getRecipe(this.props.match.params.id);\r\n    this.confirmDelete();\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    // Prompt user if they would like to delete 'selected recipe'\r\n    let choice = window.confirm(\r\n      `Are you sure you wish to delete \"${this.props.selectedRecipe.title}\" from the Recipe Box?`\r\n    );\r\n    // Execute 'delete' action if true or 'go back' if false\r\n    if (choice === true) {\r\n      this.props.deleteRecipe(this.props.match.params.id);\r\n    } else {\r\n      history.goBack();\r\n    }\r\n  };\r\n\r\n  // Nothing new is rendered\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { selectedRecipe: state.recipes[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getRecipe, deleteRecipe })(\r\n  RecipeDelete\r\n);\r\n"]},"metadata":{},"sourceType":"module"}