{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\thane\\\\Desktop\\\\React_Redux\\\\thane-engen.com\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\thane\\\\Desktop\\\\React_Redux\\\\thane-engen.com\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\thane\\\\Desktop\\\\React_Redux\\\\thane-engen.com\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\thane\\\\Desktop\\\\React_Redux\\\\thane-engen.com\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\thane\\\\Desktop\\\\React_Redux\\\\thane-engen.com\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from\"react\";import{Field,FieldArray,reduxForm}from\"redux-form\";import history from\"../../../../../history\";var RecipeForm=/*#__PURE__*/function(_React$Component){_inherits(RecipeForm,_React$Component);function RecipeForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,RecipeForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(RecipeForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.renderField=function(_ref){var input=_ref.input,label=_ref.label,type=_ref.type,_ref$meta=_ref.meta,touched=_ref$meta.touched,error=_ref$meta.error;// Define maxchar length for 'title' field\nvar titleMaxCharLength=function titleMaxCharLength(){var titleForm=document.querySelector(\"input[name='title']\");if(titleForm){titleForm.setAttribute(\"maxlength\",\"60\");}};titleMaxCharLength();return React.createElement(React.Fragment,null,React.createElement(\"label\",null,label),React.createElement(\"input\",Object.assign({},input,{type:type,placeholder:label})),touched&&error&&React.createElement(\"span\",null,error));};_this.renderIngredients=function(_ref2){var fields=_ref2.fields,error=_ref2.meta.error;return React.createElement(\"ul\",{className:\"custom-field-array-container\"},fields.map(function(ingredient,index){return React.createElement(\"li\",{key:index,className:\"ingredient-form-value field-array-item\"},React.createElement(Field,{name:ingredient,type:\"text\",component:_this.renderField,label:\"Ingredient #\".concat(index+1)}),React.createElement(\"i\",{title:\"Remove Ingredient\",onClick:function onClick(){return fields.remove(index);},className:\"fas fa-trash-alt\"}));}),React.createElement(\"div\",{className:\"add-buttons\"},React.createElement(\"li\",null,React.createElement(\"button\",{type:\"button\",onClick:function onClick(){return fields.push();}},\"Add \",!fields.length?\"Ingredient(s)\":\"Another Ingredient\")),error&&React.createElement(\"li\",{className:\"error\"},error)));};_this.renderTextArea=function(_ref3){var input=_ref3.input,label=_ref3.label,type=_ref3.type,_ref3$meta=_ref3.meta,touched=_ref3$meta.touched,error=_ref3$meta.error;return React.createElement(React.Fragment,null,React.createElement(\"label\",null,label),React.createElement(\"textarea\",Object.assign({},input,{type:type,placeholder:label,rows:\"10\",cols:\"40\"})),touched&&error&&React.createElement(\"span\",null,error));};_this.renderDirections=function(_ref4){var fields=_ref4.fields,error=_ref4.meta.error;return React.createElement(\"ul\",{className:\"custom-field-array-container\"},fields.map(function(direction,index){return React.createElement(\"li\",{key:index,className:\"direction-form-value field-array-item\"},React.createElement(Field,{name:direction,type:\"text\",component:_this.renderTextArea,label:\"Direction #\".concat(index+1)}),React.createElement(\"div\",{id:\"direction-delete-button\",onClick:function onClick(){return fields.remove(index);},title:\"Remove Direction\"},React.createElement(\"i\",{className:\"fas fa-trash-alt\"}),React.createElement(\"span\",null,\"Delete\")));}),React.createElement(\"div\",{className:\"add-buttons\"},React.createElement(\"li\",null,React.createElement(\"button\",{type:\"button\",onClick:function onClick(){return fields.push();}},\"Add \",!fields.length?\"Direction(s)\":\"Another Direction\")),error&&React.createElement(\"li\",{className:\"error\"},error)));};_this.onSubmit=function(formValues){_this.props.onSubmit(formValues);};return _this;}_createClass(RecipeForm,[{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(\"form\",{onSubmit:this.props.handleSubmit(this.onSubmit)},React.createElement(\"div\",{id:\"title-form\"},React.createElement(Field,{name:\"title\",component:this.renderField,type:\"text\",label:\"Recipe Title\"})),React.createElement(FieldArray,{name:\"ingredients\",component:this.renderIngredients}),React.createElement(\"hr\",null),React.createElement(FieldArray,{name:\"directions\",component:this.renderDirections}),React.createElement(\"div\",{id:\"form-buttons\"},React.createElement(\"button\",{className:\"ui button primary big\"},\"Submit\"),React.createElement(\"span\",{className:\"ui button negative big\",onClick:function onClick(){return history.goBack();}},\"Cancel\"))));}}]);return RecipeForm;}(React.Component);var validate=function validate(values){var errors={};if(!values.title){errors.title=\"! Required\";}if(!values.ingredients||!values.ingredients.length){errors.ingredients={_error:\"At least one ingredient must be entered\"};}else{var ingredientArrayErrors=[];values.ingredients.forEach(function(ingredient,index){if(!ingredient||!ingredient.length){ingredientArrayErrors[index]=\"! Required\";}});if(ingredientArrayErrors.length){errors.ingredients=ingredientArrayErrors;}}if(!values.directions||!values.directions.length){errors.directions={_error:\"At least one direction must be entered\"};}else{var directionArrayErrors=[];values.directions.forEach(function(direction,index){if(!direction||!direction.length){directionArrayErrors[index]=\"! Required\";}});if(directionArrayErrors.length){errors.directions=directionArrayErrors;}}return errors;};export default reduxForm({form:\"recipeForm\",validate:validate})(RecipeForm);","map":{"version":3,"sources":["C:/Users/thane/Desktop/React_Redux/thane-engen.com/client/src/components/projects/recipe-box/components/recipes/RecipeForm.js"],"names":["React","Field","FieldArray","reduxForm","history","RecipeForm","renderField","input","label","type","meta","touched","error","titleMaxCharLength","titleForm","document","querySelector","setAttribute","renderIngredients","fields","map","ingredient","index","remove","push","length","renderTextArea","renderDirections","direction","onSubmit","formValues","props","handleSubmit","goBack","Component","validate","values","errors","title","ingredients","_error","ingredientArrayErrors","forEach","directions","directionArrayErrors","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Field, FieldArray, reduxForm } from \"redux-form\";\r\nimport history from \"../../../../../history\"\r\n\r\nclass RecipeForm extends React.Component {\r\n  renderField = ({ input, label, type, meta: { touched, error } }) => {\r\n    // Define maxchar length for 'title' field\r\n    const titleMaxCharLength = () => {\r\n      const titleForm = document.querySelector(\"input[name='title']\");\r\n      if (titleForm) {\r\n        titleForm.setAttribute(\"maxlength\", \"60\");\r\n      }\r\n    };\r\n    titleMaxCharLength();\r\n    return (\r\n      <React.Fragment>\r\n        <label>{label}</label>\r\n        <input {...input} type={type} placeholder={label} />\r\n        {touched && error && <span>{error}</span>}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  renderIngredients = ({ fields, meta: { error } }) => {\r\n    return (\r\n      <ul className=\"custom-field-array-container\">\r\n        {fields.map((ingredient, index) => (\r\n          <li key={index} className=\"ingredient-form-value field-array-item\">\r\n            <Field\r\n              name={ingredient}\r\n              type=\"text\"\r\n              component={this.renderField}\r\n              label={`Ingredient #${index + 1}`}\r\n            />\r\n            <i\r\n              title=\"Remove Ingredient\"\r\n              onClick={() => fields.remove(index)}\r\n              className=\"fas fa-trash-alt\"\r\n            ></i>\r\n          </li>\r\n        ))}\r\n        <div className=\"add-buttons\">\r\n          <li>\r\n            <button type=\"button\" onClick={() => fields.push()}>\r\n              Add {!fields.length ? \"Ingredient(s)\" : \"Another Ingredient\"}\r\n            </button>\r\n          </li>\r\n          {error && <li className=\"error\">{error}</li>}\r\n        </div>\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  renderTextArea = ({ input, label, type, meta: { touched, error } }) => {\r\n    return (\r\n      <React.Fragment>\r\n        <label>{label}</label>\r\n        <textarea\r\n          {...input}\r\n          type={type}\r\n          placeholder={label}\r\n          rows=\"10\"\r\n          cols=\"40\"\r\n        />\r\n        {touched && error && <span>{error}</span>}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  renderDirections = ({ fields, meta: { error } }) => {\r\n    return (\r\n      <ul className=\"custom-field-array-container\">\r\n        {fields.map((direction, index) => (\r\n          <li key={index} className=\"direction-form-value field-array-item\">\r\n            <Field\r\n              name={direction}\r\n              type=\"text\"\r\n              component={this.renderTextArea}\r\n              label={`Direction #${index + 1}`}\r\n            />\r\n            <div\r\n              id=\"direction-delete-button\"\r\n              onClick={() => fields.remove(index)}\r\n              title=\"Remove Direction\"\r\n            >\r\n              <i className=\"fas fa-trash-alt\"></i>\r\n              <span>Delete</span>\r\n            </div>\r\n          </li>\r\n        ))}\r\n        <div className=\"add-buttons\">\r\n          <li>\r\n            <button type=\"button\" onClick={() => fields.push()}>\r\n              Add {!fields.length ? \"Direction(s)\" : \"Another Direction\"}\r\n            </button>\r\n          </li>\r\n          {error && <li className=\"error\">{error}</li>}\r\n        </div>\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  onSubmit = formValues => {\r\n    this.props.onSubmit(formValues);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n          <div id=\"title-form\">\r\n            <Field\r\n              name=\"title\"\r\n              component={this.renderField}\r\n              type=\"text\"\r\n              label=\"Recipe Title\"\r\n            />\r\n          </div>\r\n          <FieldArray name=\"ingredients\" component={this.renderIngredients} />\r\n          <hr />\r\n          <FieldArray name=\"directions\" component={this.renderDirections} />\r\n          <div id=\"form-buttons\">\r\n            <button className=\"ui button primary big\">Submit</button>\r\n            <span\r\n              className=\"ui button negative big\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Cancel\r\n            </span>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n\r\n  if (!values.title) {\r\n    errors.title = \"! Required\";\r\n  }\r\n\r\n  if (!values.ingredients || !values.ingredients.length) {\r\n    errors.ingredients = { _error: \"At least one ingredient must be entered\" };\r\n  } else {\r\n    const ingredientArrayErrors = [];\r\n    values.ingredients.forEach((ingredient, index) => {\r\n      if (!ingredient || !ingredient.length) {\r\n        ingredientArrayErrors[index] = \"! Required\";\r\n      }\r\n    });\r\n    if (ingredientArrayErrors.length) {\r\n      errors.ingredients = ingredientArrayErrors;\r\n    }\r\n  }\r\n\r\n  if (!values.directions || !values.directions.length) {\r\n    errors.directions = { _error: \"At least one direction must be entered\" };\r\n  } else {\r\n    const directionArrayErrors = [];\r\n    values.directions.forEach((direction, index) => {\r\n      if (!direction || !direction.length) {\r\n        directionArrayErrors[index] = \"! Required\";\r\n      }\r\n    });\r\n    if (directionArrayErrors.length) {\r\n      errors.directions = directionArrayErrors;\r\n    }\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"recipeForm\",\r\n  validate\r\n})(RecipeForm);\r\n"]},"metadata":{},"sourceType":"module"}